# push to dev branch: deploy to the dev cluster
# push to master branch: deploy to the QA cluster
# publish to release: deploy to the staging cluster
---
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  APPS: 'spring-petclinic'
  ECR_REGISTRY: 120364521891.dkr.ecr.us-east-1.amazonaws.com
  ECR_AWS_REGION: 'us-east-1'
  EKS_CLUSTER: trustd-demo
  HELM_DIR: helm-chart
name: "main"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checking out codebase
      uses: actions/checkout@v2

    - name: Authenticating to AWS
      with:
        aws-access-key-id: ${{ secrets.awsAccessKeyId }}
        aws-secret-access-key: ${{ secrets.awsSecretAccessKey }}
        aws-region: ${{ env.ECR_AWS_REGION }}
      uses: aws-actions/configure-aws-credentials@v1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Login to K8S cluster
      run: aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER

    - name: Build and Push
      run: |
        apps=${{ env.APPS }}
        for app in "${apps[@]}"; do
          ./mvnw -DskipTests spring-boot:build-image -Dspring-boot.build-image.imageName=${app}:latest
          docker tag ${app}:latest ${{ env.ECR_REGISTRY }}/${app}:latest;
          docker tag ${app} ${{ env.ECR_REGISTRY }}/${app}:${{ github.sha }};
          docker push ${{ env.ECR_REGISTRY }}/${app}:latest;
          docker push ${{ env.ECR_REGISTRY }}/${app}:${{ github.sha }};
        done
    
    - name: "Helm upgrade"
      run: |
        apps=${{ env.APPS }}
        for app in "${apps[@]}"; do
          helm upgrade --install ${app} ./${{ env.HELM_DIR }} \
           --namespace=default \
           --atomic \
           --wait \
           --set image.tag=${{ github.sha }} \
           --values=${{ env.HELM_DIR }}/values/demo.yaml
        done
